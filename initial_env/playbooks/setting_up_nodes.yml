---
- hosts: all
  become: yes
  vars_files:
  - env_variables
  tasks:
  # - name: Creating a repository file for Kubernetes
  #   file:
  #    path: /etc/yum.repos.d/kubernetes.repo
  #    state: touch

  # - name: Adding repository details in Kubernetes repo file.
  #   blockinfile:
  #    path: /etc/yum.repos.d/kubernetes.repo
  #    block: |
  #     [kubernetes]
  #     name=Kubernetes
  #     baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
  #     enabled=1
  #     gpgcheck=1
  #     repo_gpgcheck=1
  #     gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg

  # - name: Installing docker repo
  #   shell: "{{ item }}"
  #   with_items:
  #     - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  - name: Installing required packages for docker
    yum:
     name: "{{ packages }}"
     state: present
    vars:
      packages:
      - firewalld
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      # - containerd.io-1.2.13
      # - docker-ce-19.03.11
      # - docker-ce-cli-19.03.11
 
  - name: Upload docker and kubernetes packages
    copy: 
      src: ../packages
      dest: /tmp

  - name: Installing docker and kubernetes packages
    shell: yum install -y *.rpm
    args:
      chdir: "{{  item }}"
    loop:
      - /tmp/packages/docker
      - /tmp/packages/kubernetes 

  # - name: Installing required packages
  #   yum:
  #    name: "{{ item }}"
  #    state: present
  #   with_items: "{{ packages }}"

  - name: Set up the Docker daemon
    shell: |
      cat <<EOF | sudo tee /etc/docker/daemon.json
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
      EOF
      sudo mkdir -p /etc/systemd/system/docker.service.d
      sudo systemctl daemon-reload
      sudo systemctl restart docker

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"

  - name: Allow Network Ports in Firewalld
    firewalld:
     port: "{{ item }}"
     state: enabled
     permanent: yes
     immediate: yes
    with_items: "{{ ports }}"

  - name: Stopping the firewalld service
    service:
     name: firewalld
     state: stopped
     enabled: no

  - name: Enabling Bridge Firewall Rule
    shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF
        sudo sysctl --system
